name: Docker Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_url: ${{ steps.build_image.outputs.image_url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        id: build_image
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}"
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          IMAGE_URL="${IMAGE_NAME_LOWER}/temp-swift:${{ github.sha }}"
          echo "IMAGE_URL=${IMAGE_URL}" >> $GITHUB_ENV
          echo "image_url=${IMAGE_URL}" >> $GITHUB_OUTPUT
          docker buildx build --push --tag "${IMAGE_URL}" .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y ssh

      - name: Add SSH Key to SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        env:
          IMAGE_URL: ${{ needs.build.outputs.image_url }}
          EC2_USER: ec2-user
          EC2_HOST: 18.208.150.4
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GHCR_PAT }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << ENDSSH
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker pull "$IMAGE_URL"
            docker stop spark-app || true
            docker rm spark-app || true
            docker run -d --restart unless-stopped -p 3000:3000 --name spark-app "$IMAGE_URL"
          ENDSSH
